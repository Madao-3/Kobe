{
  "name": "Kobe",
  "tagline": "",
  "body": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\r\n\t<title>To Kobe</title>\r\n\t<script src=\"./genetic-0.1.14.min.js\"></script>\r\n\t<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\r\n</head>\r\n<body>\r\n\r\n<script>\r\n\r\nvar genetic = Genetic.create();\r\n\r\ngenetic.optimize = Genetic.Optimize.Maximize;\r\ngenetic.select1 = Genetic.Select1.Tournament2;\r\ngenetic.select2 = Genetic.Select2.Tournament2;\r\n\r\n\r\n\r\n// 种子RBG 色彩字符串\r\ngenetic.seed = function() {\r\n  var RGB_CONSTANTS_NUMBER = 256\r\n  function randomRGBItem() {\r\n    return Math.floor(Math.random()*RGB_CONSTANTS_NUMBER)\r\n  }\r\n\tfunction randomRGBColor() {\r\n\t\treturn [randomRGBItem(),randomRGBItem(),randomRGBItem()];\r\n\t}\r\n\treturn randomRGBColor();\r\n};\r\n\r\n// 变异，修改色值完成进化  \r\n// 注：色值修改不涉及逗号的部分，只进行数字部分的修改\r\ngenetic.mutate = function(entity) {\r\n  var RGB_CONSTANTS_NUMBER = 256\r\n  index = Math.floor(Math.random()*entity.length)\r\n  entity[index] = Math.floor(entity[index] + RGB_CONSTANTS_NUMBER * Math.random())%RGB_CONSTANTS_NUMBER\r\n\treturn entity\r\n};\r\n\r\n\r\n// 交叉 遗传算法的基因重组\r\n// \r\ngenetic.crossover = function(mother, father) {\r\n\t// two-point crossover\r\n\tvar len = mother.length;\r\n\tvar ca = Math.floor(Math.random()*len);\r\n\tvar cb = Math.floor(Math.random()*len);\t\t\r\n\tif (ca > cb) {\r\n\t\tvar tmp = cb;\r\n\t\tcb = ca;\r\n\t\tca = tmp;\r\n\t}\r\n\t\t\r\n\tvar son      = father.slice(0,ca).concat(mother.slice(ca, cb-ca).concat(father.slice(cb,len)))\r\n\tvar daughter = mother.slice(0,ca).concat(father.slice(ca, cb-ca).concat(mother.slice(cb,len)))\r\n\t\r\n\treturn [son, daughter];\r\n};\r\n\r\ngenetic.fitness = function(entity) {\r\n\tvar fitness = 0;\r\n\t\r\n\tvar i;\r\n\tfor (i=0;i<entity.length;++i) {\r\n\t\t// increase fitness for each character that matches\r\n\t\tif (entity[i] == this.userData[\"solution\"][i])\r\n\t\t\tfitness += 1;\r\n\t\t// award fractions of a point as we get warmer\r\n\t\tfitness += (127-Math.abs(entity[i] - this.userData[\"solution\"][i]))/50;\r\n\t}\r\n\r\n\treturn fitness;\r\n};\r\n\r\ngenetic.generation = function(pop, generation, stats) {\r\n\t// stop running once we've reached the solution\r\n\treturn pop[0].entity != this.userData[\"solution\"];\r\n};\r\n\r\ngenetic.notification = function(pop, generation, stats, isFinished) {\r\n\r\n  function lerp(a, b, p) {\r\n    return a + (b-a)*p;\r\n  }\r\n\r\n  var value = pop[0].entity;\r\n  this.last = this.last||value;\r\n\r\n  if (pop != 0 && value == this.last)\r\n    return;\r\n\r\n\r\n  var solution = [];\r\n  var i;\r\n  for (i=0;i<value.length;++i) {\r\n    var diff = value.charCodeAt(i) - this.last.charCodeAt(i);\r\n    var style = \"background: transparent;\";\r\n    if (diff > 0) {\r\n      style = \"background: rgb(0,200,50); color: #fff;\";\r\n    } else if (diff < 0) {\r\n      style = \"background: rgb(0,100,50); color: #fff;\";\r\n    }\r\n\r\n    solution.push(\"<span style=\\\"\" + style + \"\\\">\" + value[i] + \"</span>\");\r\n  }\r\n\r\n  var buf = \"\";\r\n  buf += \"<tr>\";\r\n  buf += \"<td>\" + generation + \"</td>\";\r\n  buf += \"<td>\" + pop[0].fitness.toPrecision(5) + \"</td>\";\r\n  buf += \"<td>\" + solution.join(\"\") + \"</td>\";\r\n  buf += \"</tr>\";\r\n  $(\"#results tbody\").prepend(buf);\r\n\t\r\n\tthis.last = value;\r\n  \r\n  if (isFinished) {\r\n    // 执行下一组\r\n  }\r\n};\r\n\r\n\r\n$(document).ready(function () {\r\n\t\tvar config = {\r\n\t\t\titerations : 4000,\r\n      size       : 250,\r\n      crossover  : 0.3,\r\n      mutation   : 0.3,\r\n      skip       : 20\r\n\t\t}\r\n\r\n    image = new Image()\r\n    image.src = 'http://ww1.sinaimg.cn/large/94053c2djw1f2lp9m3nkej20fa0a6jrq.jpg'\r\n    image.onload = function(){\r\n      var x  = y = 0,\r\n      width  = this.width,\r\n      height = this.height,\r\n      canvas = document.createElement('canvas'),\r\n      context = canvas.getContext('2d')\r\n      context.drawImage(this, y, x)\r\n      var imageData = context.getImageData(x, y, width, height);\r\n      var data = imageData.data;\r\n      console.log(window.data =data)\r\n      \r\n    }\r\n    \r\n\r\n    // 超大数组\r\n    // 应该分治，空间不足\r\n\t\tvar userData = {\r\n      // \"solution\"  : $(\"#quote\").val()\r\n      \r\n\t\t};\r\n    // genetic.evolve(config, userData);\r\n});\r\n\r\n</script>\r\n\t\r\n\t\r\n</body>\r\n</html>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}